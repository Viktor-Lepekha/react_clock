{"version":3,"sources":["Components/Clock.js","App.js","index.js"],"names":["Clock","state","time","Date","toLocaleTimeString","this","interval","setInterval","setState","console","log","prevProps","props","name","clearInterval","React","Component","App","clockName","isClockVisible","showCLock","hideCLock","changeName","Math","trunc","random","className","type","onClick","ReactDOM","render","document","getElementById"],"mappings":"uMA2CeA,E,4MAvCbC,MAAQ,CACNC,MAAM,IAAIC,MAAOC,sB,uDAGnB,WAAqB,IAAD,OAClBC,KAAKC,SAAWC,aAAY,WAC1B,EAAKC,SAAS,CAAEN,MAAM,IAAIC,MAAOC,uBAEjCK,QAAQC,IAAI,EAAKT,MAAMC,QACtB,O,gCAGL,SAAmBS,GACbN,KAAKO,MAAMC,OAASF,EAAUE,MAEhCJ,QAAQC,IAAR,qCAA0CC,EAAUE,KAApD,eAA+DR,KAAKO,MAAMC,S,kCAI9E,WACEC,cAAcT,KAAKC,Y,oBAGrB,WACE,IAAQJ,EAASG,KAAKJ,MAAdC,KAER,OACE,4DAEIA,Q,GA9BUa,IAAMC,WCoDXC,G,MAlDf,4MACEhB,MAAQ,CACNiB,UAAW,EACXC,gBAAgB,GAHpB,EAMEC,UAAY,WACV,EAAKZ,SAAS,CAAEW,gBAAgB,KAPpC,EAUEE,UAAY,WACV,EAAKb,SAAS,CAAEW,gBAAgB,KAXpC,EAcEG,WAAa,WACX,EAAKd,SAAS,CAAEU,UAAWK,KAAKC,MAAsB,IAAhBD,KAAKE,aAf/C,4CAkBE,WACE,MAAsCpB,KAAKJ,MAAnCiB,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,eAEnB,OACE,yBAAKO,UAAU,OACb,2CACCP,EAAiB,kBAAC,EAAD,CAAON,KAAMK,IAC3B,mDACJ,4BACES,KAAK,SACLC,QAASvB,KAAKe,WAFhB,cAMA,4BACEO,KAAK,SACLC,QAASvB,KAAKgB,WAFhB,cAMA,4BACEK,UAAU,SACVC,KAAK,SACLC,QAASvB,KAAKiB,YAHhB,wBAtCR,GAAyBP,IAAMC,YCD/Ba,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.bf26e073.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass Clock extends React.Component {\n  state = {\n    time: new Date().toLocaleTimeString(),\n  };\n\n  componentDidMount() {\n    this.interval = setInterval(() => {\n      this.setState({ time: new Date().toLocaleTimeString() });\n      // eslint-disable-next-line no-console\n      console.log(this.state.time);\n    }, 1000);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.name !== prevProps.name) {\n      // eslint-disable-next-line\n      console.log(`The Clock was renamed from ${prevProps.name} to ${this.props.name}`)\n    }\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.interval);\n  }\n\n  render() {\n    const { time } = this.state;\n\n    return (\n      <p>\n        {`Current time:\n        ${time}`}\n      </p>\n    );\n  }\n}\n\nClock.propTypes = {\n  name: PropTypes.number.isRequired,\n};\n\nexport default Clock;\n","import React from 'react';\nimport CLock from './Components/Clock';\n\nimport './App.scss';\n\nexport class App extends React.Component {\n  state = {\n    clockName: 1,\n    isClockVisible: true,\n  };\n\n  showCLock = () => {\n    this.setState({ isClockVisible: true });\n  }\n\n  hideCLock = () => {\n    this.setState({ isClockVisible: false });\n  }\n\n  changeName = () => {\n    this.setState({ clockName: Math.trunc(Math.random() * 100) });\n  }\n\n  render() {\n    const { clockName, isClockVisible } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n        {isClockVisible ? <CLock name={clockName} />\n          : <p>The clock is stopped</p>}\n        <button\n          type=\"button\"\n          onClick={this.showCLock}\n        >\n          Show Clock\n        </button>\n        <button\n          type=\"button\"\n          onClick={this.hideCLock}\n        >\n          Hide clock\n        </button>\n        <button\n          className=\"button\"\n          type=\"button\"\n          onClick={this.changeName}\n        >\n          Set random name\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}